Supercombinator definitions
Code for I:
   {UpdateMarkers 1,
    Take (1,1),
    PushMarker 1,
    Enter Arg 1}


Code for K:
   {UpdateMarkers 2,
    Take (2,2),
    PushMarker 1,
    Enter Arg 1}


Code for K1:
   {UpdateMarkers 2,
    Take (2,2),
    PushMarker 2,
    Enter Arg 2}


Code for S:
   {UpdateMarkers 3,
    Take (4,3),
    Move 4 Code {PushMarker 4,
                 Push PArg Code {PushMarker 3,
                                 Enter Arg 3},
                 PushMarker 2,
                 Enter Arg 2},
    Push PArg Code {Enter Arg 4},
    Push PArg Code {PushMarker 3,
                    Enter Arg 3},
    PushMarker 1,
    Enter Arg 1}


Code for compose:
   {UpdateMarkers 3,
    Take (4,3),
    Move 4 Code {PushMarker 4,
                 Push PArg Code {PushMarker 3,
                                 Enter Arg 3},
                 PushMarker 2,
                 Enter Arg 2},
    Push PArg Code {Enter Arg 4},
    PushMarker 1,
    Enter Arg 1}


Code for twice:
   {UpdateMarkers 1,
    Take (1,1),
    Push PArg Code {PushMarker 1,
                    Enter Arg 1},
    Push PArg Code {PushMarker 1,
                    Enter Arg 1},
    Enter Label "compose"}


Code for main:
   {UpdateMarkers 0,
    Take (2,0),
    Push PCont Code {Switch <0> -> {Move 1 Data 1,
                                    Enter Arg 1}
                            <1> -> {Move 1 Data 1,
                                    Move 2 Data 2,
                                    Push PCont Code {Push PCont Code {Op Mul,
                                                                      Return},
                                                     Enter Arg 1},
                                    Enter Arg 2}
                            },
    Push PArg IntConst 1,
    UpdateMarkers 1,
    Take (1,1),
    ReturnConstr 0}



State transitions

   0) Code:  {Enter Label "main"}
      Null Fptr
      
      Null Dptr
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   1) Code:  {UpdateMarkers 0, Take (2,0), Push PCont Code {..}, ..}
      Null Fptr
      
      Null Dptr
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   2) Code:  {Take (2,0), Push PCont Code {..}, Push PArg IntConst 1, ..}
      Null Fptr
      
      Null Dptr
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   3) Code:  {Push PCont Code {..}, Push PArg IntConst 1, UpdateMarkers 1, ..}
      Fptr (addr  1):
        <({},FrameNull)
         ({},FrameNull)>
      
      Null Dptr
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   4) Code:  {Push PArg IntConst 1, UpdateMarkers 1, Take (1,1), ..}
      Fptr (addr  1):
        <({},FrameNull)
         ({},FrameNull)>
      
      Null Dptr
      
      Arg stack:
        []
      
      Cont stack:
        [({Switch <0> -> {..}
                  <1> -> {..}
                  },FrameAddr 1)
         ({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   5) Code:  {UpdateMarkers 1, Take (1,1), ReturnConstr 0}
      Fptr (addr  1):
        <({},FrameNull)
         ({},FrameNull)>
      
      Null Dptr
      
      Arg stack:
        [({PushV FramePtr, Return},FrameInt 1)]
      
      Cont stack:
        [({Switch <0> -> {..}
                  <1> -> {..}
                  },FrameAddr 1)
         ({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   6) Code:  {Take (1,1), ReturnConstr 0}
      Fptr (addr  1):
        <({},FrameNull)
         ({},FrameNull)>
      
      Null Dptr
      
      Arg stack:
        [({PushV FramePtr, Return},FrameInt 1)]
      
      Cont stack:
        [({Switch <0> -> {..}
                  <1> -> {..}
                  },FrameAddr 1)
         ({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   7) Code:  {ReturnConstr 0}
      Fptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Null Dptr
      
      Arg stack:
        []
      
      Cont stack:
        [({Switch <0> -> {..}
                  <1> -> {..}
                  },FrameAddr 1)
         ({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
   8) Code:  {Switch <0> -> {..}
                     <1> -> {..}
                     }
      Fptr (addr  1):
        <({},FrameNull)
         ({},FrameNull)>
      
      Dptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[0]
      
      Dump:
        []
      
   9) Code:  {Move 1 Data 1, Enter Arg 1}
      Fptr (addr  1):
        <({},FrameNull)
         ({},FrameNull)>
      
      Dptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
  10) Code:  {Enter Arg 1}
      Fptr (addr  1):
        <({PushV FramePtr, Return},FrameInt 1)
         ({},FrameNull)>
      
      Dptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
  11) Code:  {PushV FramePtr, Return}
      Frame ptr (int): 1
      
      Dptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[]
      
      Dump:
        []
      
  12) Code:  {Return}
      Frame ptr (int): 1
      
      Dptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Arg stack:
        []
      
      Cont stack:
        [({},FrameNull)]
      
      VStack:[1]
      
      Dump:
        []
      
  13) Code:  {}
      Null Fptr
      
      Dptr (addr  2):
        <({PushV FramePtr, Return},FrameInt 1)>
      
      Arg stack:
        []
      
      Cont stack:
        []
      
      VStack:[1]
      
      Dump:
        []
      


Steps taken = 13
Frames allocated =  2
Total heap allocations = 1
